from icmplib import ping
import os
import netifaces
from netaddr import IPAddress
import socket
import os
import requests
import json


def get_amount_hosts():
    subnet_mask = netifaces.ifaddresses("eth0")[netifaces.AF_INET][0]['netmask']
    cidr_subnet = sum(bin(int(x)).count('1') for x in subnet_mask.split('.'))
    return 2 ** (32 - cidr_subnet) - 2


def get_ip():
    starting_ip = os.popen("hostname -I").read().strip()
    starting_ip = starting_ip[:starting_ip.rindex(".") + 1]
    hosts = get_amount_hosts()
    for end_ip in range(0, 10):  # hosts+1
        ip = starting_ip + str(end_ip)
        host = ping(ip, count=1)
        print(ip)
        if host.packets_received == 1:
            yield ip


def get_ports(ip):
    scanner = socket.gethostbyname(ip)
    ports = []
    service_name = ""
    for port in range(1, 1000):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        print(f"Scanning port: {port}")
        open_ports = sock.connect_ex((ip, port))
        if open_ports == 0:
            ports.append(port)
            service_name = socket.getservbyport(port, "tcp")
            sock.close()
    return ports, service_name


def get_headers():
    server_ips = list(get_ip())
    for ip in server_ips:
        ports = get_ports(ip)
        for port in ports:
            response = requests.get(f"http://{ip}:{port}")
            with open(f"headers_{ip}:{port}.json", "w", encoding="utf-8") as f:
                f.write(json.dumps(dict(response.headers), indent=4))


def enumeration_subpages(file_with_words):
    url = "http://192.168.55.8/"
    with open("subpages.txt", encoding="UTF-8") as f:
        for line in f.readlines():
            response = requests.get(url + line.strip())
            if response.status_code != 404:
                with open("subpage", "a", encoding="UTF-8") as f:
                    f.write(f"{line}: {response.status_code}\n")


get_headers()
for ip in get_ip():
    ports, service_name = get_ports(ip)
    with open("ip_and_ports.txt", "a", encoding="utf-8") as f:
        f.write(ip)
    for port in ports:
        with open("ip_and_ports.txt", "a", encoding="utf-8") as f:
            f.write(f"{port}: {service_name}, ")
        with open("ip_and_ports.txt", "a", encoding="utf-8") as f:
            f.write("\n")




